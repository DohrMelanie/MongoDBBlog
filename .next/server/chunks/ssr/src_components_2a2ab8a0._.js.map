{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/laflame/Documents/School-Git/mongo/task3/src/components/ui/flowbite/form/button.tsx"],"sourcesContent":["export default function Button({ children, type = \"button\", onClick }: { children: React.ReactNode, type?: \"button\" | \"submit\" | \"reset\", onClick?: () => void }) {\n    return (\n        <button onClick={onClick} type={type} className=\"text-white bg-[#24292F] hover:bg-[#24292F]/90 focus:ring-4 focus:outline-none focus:ring-[#24292F]/50 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center dark:focus:ring-gray-500 dark:hover:bg-[#050708]/30 me-2 mb-2\">\n            {children}\n        </button>\n    )\n}"],"names":[],"mappings":";;;;;AAAe,SAAS,OAAO,EAAE,QAAQ,EAAE,OAAO,QAAQ,EAAE,OAAO,EAA6F;IAC5J,qBACI,8OAAC;QAAO,SAAS;QAAS,MAAM;QAAM,WAAU;kBAC3C;;;;;;AAGb","debugId":null}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["file:///home/laflame/Documents/School-Git/mongo/task3/src/components/ui/flowbite/form/form.tsx"],"sourcesContent":["export default function Form({ children, onSubmit, error, className }: { children: React.ReactNode, onSubmit: (e: React.FormEvent<HTMLFormElement>) => void, error?: string, className?: string }) {\n    return (\n        <form onSubmit={onSubmit} className={`mx-auto ${className}`}>\n            {children}\n            {error && <p className=\"text-red-500\">{error}</p>}\n        </form>\n    )\n}"],"names":[],"mappings":";;;;;AAAe,SAAS,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,EAA8H;IAC7L,qBACI,8OAAC;QAAK,UAAU;QAAU,WAAW,CAAC,QAAQ,EAAE,WAAW;;YACtD;YACA,uBAAS,8OAAC;gBAAE,WAAU;0BAAgB;;;;;;;;;;;;AAGnD","debugId":null}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file:///home/laflame/Documents/School-Git/mongo/task3/src/components/ui/flowbite/form/pin-code.tsx"],"sourcesContent":["import { useRef, useState } from 'react';\n\ninterface PinCodeProps {\n    length?: number;\n    onChange?: (value: string) => void;\n    onComplete: (value: string) => void;\n}\n\nexport default function PinCode({ length = 6, onChange, onComplete }: PinCodeProps) {\n    const [values, setValues] = useState<string[]>(Array(length).fill(''));\n    const inputRefs = useRef<(HTMLInputElement | null)[]>([]);\n\n    const handleChange = (index: number, value: string) => {\n        if (!/^\\d*$/.test(value)) return;\n        \n        const newValues = [...values];\n        newValues[index] = value;\n        setValues(newValues);\n\n        if (value && index < length - 1) {\n            inputRefs.current[index + 1]?.focus();\n        }\n\n        const completeValue = newValues.join('');\n        onChange?.(completeValue);\n\n        if (index === length - 1 && newValues[index] !== '') {\n            onComplete(newValues.join(''));\n        }\n    };\n\n    const handleKeyDown = (index: number, e: React.KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === 'Backspace' && !values[index] && index > 0) {\n            inputRefs.current[index - 1]?.focus();\n        }\n    };\n\n    const handlePaste = (e: React.ClipboardEvent<HTMLInputElement>) => {\n        e.preventDefault();\n        const pasteData = e.clipboardData.getData('text');\n        const digits = pasteData.replace(/\\D/g, '').slice(0, length);\n        \n        const newValues = Array(length).fill('');\n        digits.split('').forEach((digit, index) => {\n            if (index < length) {\n                newValues[index] = digit;\n            }\n        });\n        \n        setValues(newValues);\n        onChange?.(newValues.join(''));\n        \n        const nextEmptyIndex = newValues.findIndex(v => !v);\n        if (nextEmptyIndex !== -1) {\n            inputRefs.current[nextEmptyIndex]?.focus();\n        } else {\n            inputRefs.current[length - 1]?.focus();\n            onComplete(newValues.join(''));\n        }\n    };\n\n    return (\n        <div className=\"flex mb-2 justify-center items-center space-x-2 rtl:space-x-reverse\">\n            {Array(length).fill(null).map((_, index) => (\n                <div key={index}>\n                    <label htmlFor={`code-${index + 1}`} className=\"sr-only\">\n                        {`${index + 1}${index === 0 ? 'st' : index === 1 ? 'nd' : index === 2 ? 'rd' : 'th'} code`}\n                    </label>\n                    <input\n                        ref={el => { inputRefs.current[index] = el; }}\n                        type=\"text\"\n                        maxLength={1}\n                        id={`code-${index + 1}`}\n                        value={values[index]}\n                        onChange={(e) => handleChange(index, e.target.value)}\n                        onKeyDown={(e) => handleKeyDown(index, e)}\n                        onPaste={handlePaste}\n                        className=\"block w-9 h-9 py-3 text-sm font-extrabold text-center text-gray-900 bg-white border border-gray-300 rounded-lg focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500\"\n                        required\n                    />\n                </div>\n            ))}\n        </div>\n    );\n}"],"names":[],"mappings":";;;;AAAA;;;AAQe,SAAS,QAAQ,EAAE,SAAS,CAAC,EAAE,QAAQ,EAAE,UAAU,EAAgB;IAC9E,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY,MAAM,QAAQ,IAAI,CAAC;IAClE,MAAM,YAAY,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAA+B,EAAE;IAExD,MAAM,eAAe,CAAC,OAAe;QACjC,IAAI,CAAC,QAAQ,IAAI,CAAC,QAAQ;QAE1B,MAAM,YAAY;eAAI;SAAO;QAC7B,SAAS,CAAC,MAAM,GAAG;QACnB,UAAU;QAEV,IAAI,SAAS,QAAQ,SAAS,GAAG;YAC7B,UAAU,OAAO,CAAC,QAAQ,EAAE,EAAE;QAClC;QAEA,MAAM,gBAAgB,UAAU,IAAI,CAAC;QACrC,WAAW;QAEX,IAAI,UAAU,SAAS,KAAK,SAAS,CAAC,MAAM,KAAK,IAAI;YACjD,WAAW,UAAU,IAAI,CAAC;QAC9B;IACJ;IAEA,MAAM,gBAAgB,CAAC,OAAe;QAClC,IAAI,EAAE,GAAG,KAAK,eAAe,CAAC,MAAM,CAAC,MAAM,IAAI,QAAQ,GAAG;YACtD,UAAU,OAAO,CAAC,QAAQ,EAAE,EAAE;QAClC;IACJ;IAEA,MAAM,cAAc,CAAC;QACjB,EAAE,cAAc;QAChB,MAAM,YAAY,EAAE,aAAa,CAAC,OAAO,CAAC;QAC1C,MAAM,SAAS,UAAU,OAAO,CAAC,OAAO,IAAI,KAAK,CAAC,GAAG;QAErD,MAAM,YAAY,MAAM,QAAQ,IAAI,CAAC;QACrC,OAAO,KAAK,CAAC,IAAI,OAAO,CAAC,CAAC,OAAO;YAC7B,IAAI,QAAQ,QAAQ;gBAChB,SAAS,CAAC,MAAM,GAAG;YACvB;QACJ;QAEA,UAAU;QACV,WAAW,UAAU,IAAI,CAAC;QAE1B,MAAM,iBAAiB,UAAU,SAAS,CAAC,CAAA,IAAK,CAAC;QACjD,IAAI,mBAAmB,CAAC,GAAG;YACvB,UAAU,OAAO,CAAC,eAAe,EAAE;QACvC,OAAO;YACH,UAAU,OAAO,CAAC,SAAS,EAAE,EAAE;YAC/B,WAAW,UAAU,IAAI,CAAC;QAC9B;IACJ;IAEA,qBACI,8OAAC;QAAI,WAAU;kBACV,MAAM,QAAQ,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,sBAC9B,8OAAC;;kCACG,8OAAC;wBAAM,SAAS,CAAC,KAAK,EAAE,QAAQ,GAAG;wBAAE,WAAU;kCAC1C,GAAG,QAAQ,IAAI,UAAU,IAAI,OAAO,UAAU,IAAI,OAAO,UAAU,IAAI,OAAO,KAAK,KAAK,CAAC;;;;;;kCAE9F,8OAAC;wBACG,KAAK,CAAA;4BAAQ,UAAU,OAAO,CAAC,MAAM,GAAG;wBAAI;wBAC5C,MAAK;wBACL,WAAW;wBACX,IAAI,CAAC,KAAK,EAAE,QAAQ,GAAG;wBACvB,OAAO,MAAM,CAAC,MAAM;wBACpB,UAAU,CAAC,IAAM,aAAa,OAAO,EAAE,MAAM,CAAC,KAAK;wBACnD,WAAW,CAAC,IAAM,cAAc,OAAO;wBACvC,SAAS;wBACT,WAAU;wBACV,QAAQ;;;;;;;eAdN;;;;;;;;;;AAoB1B","debugId":null}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"sources":["file:///home/laflame/Documents/School-Git/mongo/task3/src/components/auth/CodeInputForm.tsx"],"sourcesContent":["\"use client\";\n\nimport Button from \"../ui/flowbite/form/button\";\nimport Form from \"../ui/flowbite/form/form\";\nimport PinCode from \"../ui/flowbite/form/pin-code\";\nimport { useRouter } from \"next/navigation\";\n\nexport default function CodeInputForm() {\n    const router = useRouter();\n\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n    }\n\n    const handleCodeSubmit = (code: string) => {\n        const username = localStorage.getItem(\"username\");\n\n        fetch(\"/api/auth/verify\", {\n            method: \"POST\",\n            body: JSON.stringify({ code, username })\n        }).then((res) => {\n            if (res.ok) {\n                router.push(\"/\");\n            }\n        });\n    }\n\n    return (\n        <Form onSubmit={handleSubmit} className=\"flex flex-col items-center justify-center\">\n            <PinCode onComplete={handleCodeSubmit} />\n            <Button type=\"submit\">Verify</Button>\n        </Form>\n    );\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAOe,SAAS;IACpB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,eAAe,CAAC;QAClB,EAAE,cAAc;IACpB;IAEA,MAAM,mBAAmB,CAAC;QACtB,MAAM,WAAW,aAAa,OAAO,CAAC;QAEtC,MAAM,oBAAoB;YACtB,QAAQ;YACR,MAAM,KAAK,SAAS,CAAC;gBAAE;gBAAM;YAAS;QAC1C,GAAG,IAAI,CAAC,CAAC;YACL,IAAI,IAAI,EAAE,EAAE;gBACR,OAAO,IAAI,CAAC;YAChB;QACJ;IACJ;IAEA,qBACI,8OAAC,oJAAA,CAAA,UAAI;QAAC,UAAU;QAAc,WAAU;;0BACpC,8OAAC,2JAAA,CAAA,UAAO;gBAAC,YAAY;;;;;;0BACrB,8OAAC,sJAAA,CAAA,UAAM;gBAAC,MAAK;0BAAS;;;;;;;;;;;;AAGlC","debugId":null}}]
}