{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":["file:///home/laflame/Documents/School-Git/mongo/task3/src/utils/token-manager.ts"],"sourcesContent":["import jwt from \"jsonwebtoken\";\n\nclass TokenManager {\n    async generateToken(username: string) {\n        const refreshToken = jwt.sign({ username }, process.env.JWT_SECRET || \"default-secret\", { expiresIn: \"1d\" });\n\n        return jwt.sign({ username, refreshToken }, process.env.JWT_SECRET || \"default-secret\");\n    }\n\n    async verifyToken(token: string) {\n        try {\n            return jwt.verify(token, process.env.JWT_SECRET || \"default-secret\");\n        } catch (error) {\n            return false;\n        }\n    }\n\n    async getUserFromToken(token: string) {\n        const decoded = jwt.verify(token, process.env.JWT_SECRET || \"default-secret\");\n\n        if (typeof decoded === \"string\") {\n            return null;\n        }\n\n        return decoded.username;\n    }\n}\n\nexport default new TokenManager();"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM;IACF,MAAM,cAAc,QAAgB,EAAE;QAClC,MAAM,eAAe,uIAAA,CAAA,UAAG,CAAC,IAAI,CAAC;YAAE;QAAS,GAAG,QAAQ,GAAG,CAAC,UAAU,IAAI,kBAAkB;YAAE,WAAW;QAAK;QAE1G,OAAO,uIAAA,CAAA,UAAG,CAAC,IAAI,CAAC;YAAE;YAAU;QAAa,GAAG,QAAQ,GAAG,CAAC,UAAU,IAAI;IAC1E;IAEA,MAAM,YAAY,KAAa,EAAE;QAC7B,IAAI;YACA,OAAO,uIAAA,CAAA,UAAG,CAAC,MAAM,CAAC,OAAO,QAAQ,GAAG,CAAC,UAAU,IAAI;QACvD,EAAE,OAAO,OAAO;YACZ,OAAO;QACX;IACJ;IAEA,MAAM,iBAAiB,KAAa,EAAE;QAClC,MAAM,UAAU,uIAAA,CAAA,UAAG,CAAC,MAAM,CAAC,OAAO,QAAQ,GAAG,CAAC,UAAU,IAAI;QAE5D,IAAI,OAAO,YAAY,UAAU;YAC7B,OAAO;QACX;QAEA,OAAO,QAAQ,QAAQ;IAC3B;AACJ;uCAEe,IAAI","debugId":null}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file:///home/laflame/Documents/School-Git/mongo/task3/src/utils/mongo.ts"],"sourcesContent":["import { MongoClient } from \"mongodb\";\n\nconst uri = process.env.MONGODB_URI || \"mongodb://localhost:27017\";\nconst client = new MongoClient(uri);\nconst db = client.db(\"blog\");\n\nexport default db;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,MAAM,QAAQ,GAAG,CAAC,WAAW,IAAI;AACvC,MAAM,SAAS,IAAI,uGAAA,CAAA,cAAW,CAAC;AAC/B,MAAM,KAAK,OAAO,EAAE,CAAC;uCAEN","debugId":null}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":["file:///home/laflame/Documents/School-Git/mongo/task3/src/utils/query.ts"],"sourcesContent":["import tokenManager from \"./token-manager\";\nimport db from \"./mongo\";\n\nclass Query {\n    async getUserFromToken(token: string) {\n        const user = await tokenManager.getUserFromToken(token);\n\n        console.log(user);\n\n        return db.collection(\"users\").findOne({ username: user });\n    }\n}\n\nexport default new Query();"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM;IACF,MAAM,iBAAiB,KAAa,EAAE;QAClC,MAAM,OAAO,MAAM,kIAAA,CAAA,UAAY,CAAC,gBAAgB,CAAC;QAEjD,QAAQ,GAAG,CAAC;QAEZ,OAAO,uHAAA,CAAA,UAAE,CAAC,UAAU,CAAC,SAAS,OAAO,CAAC;YAAE,UAAU;QAAK;IAC3D;AACJ;uCAEe,IAAI","debugId":null}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file:///home/laflame/Documents/School-Git/mongo/task3/src/app/api/v1/me/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\nimport { cookies } from \"next/headers\";\nimport Query from \"@/utils/query\";\n\nexport async function GET(request: NextRequest) {\n    const cookieStore = await cookies();\n    const token = cookieStore.get(\"token\");\n\n    const user = await Query.getUserFromToken(token!.value);\n\n    return NextResponse.json(user);\n}"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEO,eAAe,IAAI,OAAoB;IAC1C,MAAM,cAAc,MAAM,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;IAChC,MAAM,QAAQ,YAAY,GAAG,CAAC;IAE9B,MAAM,OAAO,MAAM,uHAAA,CAAA,UAAK,CAAC,gBAAgB,CAAC,MAAO,KAAK;IAEtD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;AAC7B","debugId":null}}]
}