{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/utils/token-manager.ts"],"sourcesContent":["type TokenPayload = {\n    username: string;\n    refreshToken?: string;\n    exp?: number;\n};\n\nclass TokenManager {\n    private async generateKey() {\n        const encoder = new TextEncoder();\n        const keyData = encoder.encode(process.env.JWT_SECRET || \"default-secret\");\n        return await crypto.subtle.importKey(\n            \"raw\",\n            keyData,\n            { name: \"HMAC\", hash: \"SHA-256\" },\n            false,\n            [\"sign\", \"verify\"]\n        );\n    }\n\n    private async signData(data: TokenPayload) {\n        const encoder = new TextEncoder();\n        const key = await this.generateKey();\n        const payload = encoder.encode(JSON.stringify(data));\n        const signature = await crypto.subtle.sign(\n            \"HMAC\",\n            key,\n            payload\n        );\n        return Buffer.from(signature).toString('base64url');\n    }\n\n    private async verifySignature(token: string, payload: string) {\n        const key = await this.generateKey();\n        const signature = Buffer.from(token, 'base64url');\n        const data = new TextEncoder().encode(payload);\n        return await crypto.subtle.verify(\n            \"HMAC\",\n            key,\n            signature,\n            data\n        );\n    }\n\n    async generateToken(username: string) {\n        const refreshToken = {\n            username,\n            exp: Math.floor(Date.now() / 1000) + (24 * 60 * 60) // 1 day\n        };\n        \n        const payload: TokenPayload = {\n            username,\n            refreshToken: await this.signData(refreshToken)\n        };\n        \n        return await this.signData(payload);\n    }\n\n    async verifyToken(token: string) {\n        try {\n            const [headerB64, payloadB64, signature] = token.split('.');\n            const payload = Buffer.from(payloadB64, 'base64url').toString();\n            const data: TokenPayload = JSON.parse(payload);\n            \n            const isValid = await this.verifySignature(signature, payload);\n\n            if (!isValid) return false;\n            \n            if (data.exp && data.exp < Math.floor(Date.now() / 1000)) {\n                return false;\n            }\n            \n            return data;\n        } catch (error) {\n            console.log(error);\n            return false;\n        }\n    }\n\n    async getUserFromToken(token: string) {\n        const result = await this.verifyToken(token);\n        if (!result) return null;\n        return (result as TokenPayload).username;\n    }\n}\n\nexport default new TokenManager();"],"names":[],"mappings":";;;AA4Be;AAtBf,MAAM;IACF,MAAc,cAAc;QACxB,MAAM,UAAU,IAAI;QACpB,MAAM,UAAU,QAAQ,MAAM,CAAC,QAAQ,GAAG,CAAC,UAAU,IAAI;QACzD,OAAO,MAAM,OAAO,MAAM,CAAC,SAAS,CAChC,OACA,SACA;YAAE,MAAM;YAAQ,MAAM;QAAU,GAChC,OACA;YAAC;YAAQ;SAAS;IAE1B;IAEA,MAAc,SAAS,IAAkB,EAAE;QACvC,MAAM,UAAU,IAAI;QACpB,MAAM,MAAM,MAAM,IAAI,CAAC,WAAW;QAClC,MAAM,UAAU,QAAQ,MAAM,CAAC,KAAK,SAAS,CAAC;QAC9C,MAAM,YAAY,MAAM,OAAO,MAAM,CAAC,IAAI,CACtC,QACA,KACA;QAEJ,OAAO,qHAAA,CAAA,SAAM,CAAC,IAAI,CAAC,WAAW,QAAQ,CAAC;IAC3C;IAEA,MAAc,gBAAgB,KAAa,EAAE,OAAe,EAAE;QAC1D,MAAM,MAAM,MAAM,IAAI,CAAC,WAAW;QAClC,MAAM,YAAY,qHAAA,CAAA,SAAM,CAAC,IAAI,CAAC,OAAO;QACrC,MAAM,OAAO,IAAI,cAAc,MAAM,CAAC;QACtC,OAAO,MAAM,OAAO,MAAM,CAAC,MAAM,CAC7B,QACA,KACA,WACA;IAER;IAEA,MAAM,cAAc,QAAgB,EAAE;QAClC,MAAM,eAAe;YACjB;YACA,KAAK,KAAK,KAAK,CAAC,KAAK,GAAG,KAAK,QAAS,KAAK,KAAK,GAAI,QAAQ;QAChE;QAEA,MAAM,UAAwB;YAC1B;YACA,cAAc,MAAM,IAAI,CAAC,QAAQ,CAAC;QACtC;QAEA,OAAO,MAAM,IAAI,CAAC,QAAQ,CAAC;IAC/B;IAEA,MAAM,YAAY,KAAa,EAAE;QAC7B,IAAI;YACA,MAAM,CAAC,WAAW,YAAY,UAAU,GAAG,MAAM,KAAK,CAAC;YACvD,MAAM,UAAU,qHAAA,CAAA,SAAM,CAAC,IAAI,CAAC,YAAY,aAAa,QAAQ;YAC7D,MAAM,OAAqB,KAAK,KAAK,CAAC;YAEtC,MAAM,UAAU,MAAM,IAAI,CAAC,eAAe,CAAC,WAAW;YAEtD,IAAI,CAAC,SAAS,OAAO;YAErB,IAAI,KAAK,GAAG,IAAI,KAAK,GAAG,GAAG,KAAK,KAAK,CAAC,KAAK,GAAG,KAAK,OAAO;gBACtD,OAAO;YACX;YAEA,OAAO;QACX,EAAE,OAAO,OAAO;YACZ,QAAQ,GAAG,CAAC;YACZ,OAAO;QACX;IACJ;IAEA,MAAM,iBAAiB,KAAa,EAAE;QAClC,MAAM,SAAS,MAAM,IAAI,CAAC,WAAW,CAAC;QACtC,IAAI,CAAC,QAAQ,OAAO;QACpB,OAAO,AAAC,OAAwB,QAAQ;IAC5C;AACJ;uCAEe,IAAI"}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["import { NextRequest } from \"next/server\";\nimport { NextResponse } from \"next/server\";\nimport tokenManager from \"./utils/token-manager\";\n\nexport async function middleware(request: NextRequest) {\n  const cookie = request.cookies.get(\"token\");\n\n  if (!cookie) {\n    return NextResponse.json({ error: \"Unauthorized\" }, { status: 401 });\n  }\n\n  const token = await tokenManager.verifyToken(cookie.value);\n\n  console.log(token);\n\n  if (!token) {\n    return NextResponse.json({ error: \"Unauthorized\" }, { status: 401 });\n  }\n  \n  if(typeof token === \"string\") {\n    return NextResponse.json({ error: \"Unauthorized\" }, { status: 401 });\n  }\n\n  if(token.exp && token.exp < Date.now() / 1000) {\n    const refreshToken = await tokenManager.verifyToken(token.refreshToken || \"\");\n\n    if(!refreshToken) {\n      return NextResponse.json({ error: \"Unauthorized\" }, { status: 401 });\n    }\n\n    if(typeof refreshToken === \"string\") {\n      return NextResponse.json({ error: \"Unauthorized\" }, { status: 401 });\n    }\n\n    if(refreshToken.exp && refreshToken.exp < Date.now() / 1000) {\n      return NextResponse.json({ error: \"Unauthorized\" }, { status: 401 });\n    }\n\n    const newToken = await tokenManager.generateToken(token.username);\n\n    request.cookies.set(\"token\", newToken);\n\n    return NextResponse.next();\n  }\n  \n  return NextResponse.next();\n}\n\nexport const config = {\n  matcher: [\n    \"/api/v1/:path*\"\n  ]\n};"],"names":[],"mappings":";;;;AACA;AAAA;AACA;;;AAEO,eAAe,WAAW,OAAoB;IACnD,MAAM,SAAS,QAAQ,OAAO,CAAC,GAAG,CAAC;IAEnC,IAAI,CAAC,QAAQ;QACX,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAe,GAAG;YAAE,QAAQ;QAAI;IACpE;IAEA,MAAM,QAAQ,MAAM,wIAAA,CAAA,UAAY,CAAC,WAAW,CAAC,OAAO,KAAK;IAEzD,QAAQ,GAAG,CAAC;IAEZ,IAAI,CAAC,OAAO;QACV,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAe,GAAG;YAAE,QAAQ;QAAI;IACpE;IAEA,IAAG,OAAO,UAAU,UAAU;QAC5B,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAe,GAAG;YAAE,QAAQ;QAAI;IACpE;IAEA,IAAG,MAAM,GAAG,IAAI,MAAM,GAAG,GAAG,KAAK,GAAG,KAAK,MAAM;QAC7C,MAAM,eAAe,MAAM,wIAAA,CAAA,UAAY,CAAC,WAAW,CAAC,MAAM,YAAY,IAAI;QAE1E,IAAG,CAAC,cAAc;YAChB,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAe,GAAG;gBAAE,QAAQ;YAAI;QACpE;QAEA,IAAG,OAAO,iBAAiB,UAAU;YACnC,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAe,GAAG;gBAAE,QAAQ;YAAI;QACpE;QAEA,IAAG,aAAa,GAAG,IAAI,aAAa,GAAG,GAAG,KAAK,GAAG,KAAK,MAAM;YAC3D,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAe,GAAG;gBAAE,QAAQ;YAAI;QACpE;QAEA,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAY,CAAC,aAAa,CAAC,MAAM,QAAQ;QAEhE,QAAQ,OAAO,CAAC,GAAG,CAAC,SAAS;QAE7B,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;IAC1B;IAEA,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAEO,MAAM,SAAS;IACpB,SAAS;QACP;KACD;AACH"}}]
}